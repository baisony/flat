@use "@/mixins";

.container {
  --col-gap: 1rem;

  display: flex;
  align-items: center;
  column-gap: var(--col-gap);
  padding: 0.5rem 1rem;

  @media screen and (max-width: 30rem) {
    --col-gap: 0.75rem;
  }
}

.leftSection {
  position: relative;
  height: 100%;
  flex: 1;
  display: grid;
  column-gap: var(--col-gap);
  row-gap: 0.25rem;
  grid-template-columns: auto minmax(0, 1fr);
  grid-template-areas:
    "avatar names"
    "avatar description";

  @media screen and (max-width: 30rem) {
    grid-template-areas:
      "avatar names"
      "description description";
  }
}

.button {
  white-space: nowrap;
}

.avatar {
  grid-area: avatar;
  display: grid;
  place-items: center;

  @media screen and (max-width: 30rem) {
    :global(.Avatar) {
      --cmm-Avatar-size: 2.25rem;
    }
  }
}

.names {
  grid-area: names;

  &__inner {
    display: flex;
    flex-wrap: wrap;
    align-items: baseline;
    column-gap: 0.5em;

    @media screen and (max-width: 30rem) {
      display: block;
      line-height: 1.35;
    }
  }
}

.displayName {
  font-weight: var(--cmm-font-weight-bold);
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.handle {
  font-size: var(--cmm-font-size-sm);
  color: var(--cmm-color-font-subtle);
  text-overflow: ellipsis;
  overflow: hidden;
}

.description {
  @include mixins.lineClamp(3);

  grid-area: description;
  font-size: var(--cmm-font-size-sm);
  color: var(--cmm-color-font-subtle);
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.tag {
  font-size: calc(var(--cmm-font-size-xs) * 0.9);
  height: 1.2rem;
}
